"Chose a color palette appropriate to dark background
set background=dark

"Enable syntax highlighting
syntax on

"Globally change the leader key
let mapleader = "§"

"Enable:
"- filetype detection
"- filetype-based plugin loading from the 'ftplugin' dir
"- filetype-based indent plugins from the 'indent' dir
"https://robots.thoughtbot.com/writing-vim-syntax-plugins
filetype plugin indent on

"Comply to modelines in files
"http://vim.wikia.com/wiki/Modeline_magic
set modeline
"Search modeline in the n first lines of the file
set modelines=5

"Show line numbers
set number
set relativenumber

" Shortcut to rapidly display hidden characters
" http://vimcasts.org/episodes/show-invisibles/
nmap <leader>l :set list!<CR>
" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬,space:·


" SEARCH
""""""""
set hlsearch
set incsearch

" Disable highlight until next search
nnoremap <Leader>/ :nohlsearch<CR>


" FINDING FILES
"""""""""""""""
" See https://www.youtube.com/watch?v=XA2WjJbmmoM

" Allow fuzzy-finding filenames with :find
set path+=**

" Ignore compiled files and virtualenvs
set wildignore+=*.pyc
set wildignore+=*.so
set wildignore+=./venv/**

" Display a menubar for tab completion
set wildmenu

"Highlight unwanted spaces
""""""""""""""""""""""""""
"http://vim.wikia.com/wiki/Highlight_unwanted_spaces
highlight ExtraWhitespace ctermbg=red guibg=red

"Show trailing whitespace:
match ExtraWhitespace /\s\+$/
match ExtraWhitespace /\s\+\%#\@<!$/


" SPLIT WINDOWS
"""""""""""""""
set splitright
set splitbelow

" Easily move between split windows
" http://vimcasts.org/episodes/working-with-windows/
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l


" QUICKLIST
"""""""""""
" Moving in the quicklist
nnoremap <silent> <C-Up> :cprevious<CR>
nnoremap <silent> <C-Down> :cnext<CR>
nnoremap <silent> <C-Left> :cfirst<CR>
nnoremap <silent> <C-Right> :clast<CR>


" LOCATION LIST
"""""""""""""""
" Moving in the location list
nnoremap <silent> <Up> :lprevious<CR>
nnoremap <silent> <Down> :lnext<CR>
nnoremap <silent> <Left> :lfirst<CR>
nnoremap <silent> <Right> :llast<CR>


" EXTERNAL MAPPINGS
"""""""""""""""""""
" Remap Caps-Lock to Esc
" This is done at system level, with gnome-tweak-tool


" BUILDING, LINTING
"""""""""""""""""""
" Build current buffer (%)
noremap <silent> <F5> :make %<CR><CR>


" AZERTY KEYBOARD
"""""""""""""""""
" Use "Français (sans touche morte Sun)" or "Français (azerty)" layouts so that
" ` and ^ are not dead keys and require only a single keypress.

" Allow to look for tags with 2 fingers (Shift+the-key-where-]-is-located) instead of 3 (Ctrl+Altgr+])
nnoremap ° <C-]>zt


" PLUGIN: ALE
"""""""""""""
" Let ALE call formatting tools when the file is saved
let g:ale_fix_on_save = 1

" Lint only on save
let g:ale_lint_on_text_changed = 'never'

" Go to symbol definition
" FIXME: requires a Python Language Server like Palantir
" (implementation of the Language Server Protocol)
" nnoremap ° :ALEGoToDefinition

" Let us know which linter was triggered
let g:ale_echo_msg_error_str = 'E'
let g:ale_echo_msg_warning_str = 'W'
let g:ale_echo_msg_format = '[%linter%:%code%] %s'


" HELP SYSTEM
"""""""""""""
" Load all plugins now.
" Plugins need to be added to runtimepath before helptags can be generated.
packloadall

" Load all of the helptags now, after plugins have been loaded.
" All messages and errors will be ignored.
silent! helptags ALL
